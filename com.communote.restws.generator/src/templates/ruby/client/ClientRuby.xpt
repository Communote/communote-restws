«IMPORT restWebservice»

«EXTENSION templates::ruby::client::ClientExtension»
«EXTENSION templates::Extensions»

«REM»
This part evaluates the whole RestWebservice and calls some other define blocks to generate specific output depending on the concerns
Generation steps:
	- calling the skeleton block to generate static code without any bigger evaluation of model nodes
	- Iteration over all the resources, check if the resource exists in the current selected version and calls a define block for evaluation of a resource 
«ENDREM»
«DEFINE clientrubymain FOR RestWebservice-»
	«REM»Get the API version object from the version string choosen in the workflow file«ENDREM»
	«LET getApiVersionFormString( this, (String) GLOBALVAR selectedAPIVersion ) AS version-»
		«REM»Calls the template for generate the static output files«ENDREM»
		«EXPAND templates::ruby::client::ClientRubySkeleton::skeleton(version, this.mimeTypes) FOR this»
		«REM»Iterate over all the resources of the webservice...«ENDREM»
		«FOREACH this.resources AS resource»
			«REM»...and check if the resource is included within the current selected API version«ENDREM»
			«IF checkResourceForVersion(version, resource)»
				«REM»Call the define block for evaluating a single resource. Hand over the current API version object and the resource name within the URI path«ENDREM»
				«EXPAND resourcetemplate(version, resource.name.toFirstLower()+"s", this.fullRestSupport) FOR resource»
			«ENDIF»
		«ENDFOREACH»
	«ENDLET»
«ENDDEFINE»

«REM»
This template block evaluates a single resource and calls different other template blocks for output generation seppareted by concerns
Generation steps:
	- calls the block for a regular single resource representation on the client side
	- calls the template for the parameter classes generation
	- makes recursiv calls for sub resources
	@param version - current API version object is needed for the version check and the file path
	@param path - is the path of the resource (collection) within the URI the plural "s" is already added to this value
«ENDREM»
«DEFINE resourcetemplate(APIVersion version, String path, Boolean fullRestSupport) FOR Resource»
	«REM»Calls the template for the generation of the resource file«ENDREM» 
	«EXPAND singleresource(version) FOR this»
	«REM»Calls the template for the generation of the parameter files that are needed for the request«ENDREM» 
	«EXPAND templates::ruby::client::ClientParameter::parametertemplate(version, path, fullRestSupport) FOR this»
	«REM»Iterates over all the subresources containing in a resource and calls this template block recursivly«ENDREM» 
	«FOREACH this.subResources AS subresource»
		«REM»Check that the subresource is contained in the current version«ENDREM»
		«IF checkResourceForVersion(version, subresource)»
			«REM»Makes the recursiv call and defines the path for addressing the (sub)resource«ENDREM»
			«EXPAND resourcetemplate(version, path+"/#{@"+this.resourceId.first().name.toLowerCase() +"}/" + subresource.name.toFirstLower()+"s", fullRestSupport) FOR subresource»
		«ENDIF»
	«ENDFOREACH»
«ENDDEFINE»

«REM»
This template block generates a file to represent a resource on the client side
Generation steps:
	- creates a resource file with a file name in this notation <resource_name>_resource.rb
	- Iteration over all the refered attributes and calls the template for the attribute evaluation
	- Iteration over all the refered parameters and calls the template for the parameter evaluation 
	@param version - current API version object is needed for the version check and the file path
«ENDREM»
«DEFINE singleresource(APIVersion version) FOR Resource»
	«REM»Generate the file on the file path that is delivered with the getFilePath extension«ENDREM»
	«FILE getFilePath(version, "", "_resource", this)-»
class «this.name»Resource «REM»Class definition«ENDREM»
	  «REM»get all the attributes and parameters that are linked in the current selected API version«ENDREM»
	  «LET getVersionGroupByVersion(this.versionGroups, version) AS versionGroup-» 
	  	«FOREACH versionGroup.refAttributes AS attr-»
  attr_accessor :«attr.name.toLowerCase()» «REM»create class attributes for the linked attributes«ENDREM»
  			«EXPAND generateenums(version, this) FOR attr-» «REM»generate enum file for possible enumerations that can be used as value for this attribute«ENDREM»
	  	«ENDFOREACH-»
	  	«REM»Iterates over the linked parameter list to generate enum classes for a specified parameter.
	  		 No class attributes will be created because parameter are just for server evaluation purposes«ENDREM»
	  	«FOREACH versionGroup.refParameter AS param-»
	  		«EXPAND generateenums(version, this) FOR param-»
	  	«ENDFOREACH-»
	  «ENDLET-»
end
	«ENDFILE»
«ENDDEFINE»

«REM»
This template block generates a file for an enum class which belongs to an attribute or parameter
Generation steps:
	- create a file for the enum class
	- put in all the constant values as class attributes
	@param version - current API version object is needed for the version check and the file path
	@param resource - is the resource instance in which the attribute/parameter constant is includes. This is needed for the file path
«ENDREM»
«DEFINE generateenums(APIVersion version, Resource resource) FOR AbstractParameterAttribute»
	«REM»check if a constant value exists«ENDREM»
	«IF this.content.parameterConstants.size > 0»
		«REM»create a file with the file name notation: enum_<abstractParameterAttribute_name>«ENDREM»
		«FILE getEnumFilePath(version, "enum_", this.name.toLowerCase().toString(), resource)»
			class Enum«this.name.toFirstUpper()»
			«FOREACH this.content.parameterConstants AS const»
				«REM»Put in the constant values to the ruby class. In general a constant in ruby is represented by a identifier starting with a capital letter
					For better recognition the whole identifier is written in capital letters. The value is used the way it is defined in the model «ENDREM»  
				«const.value.toUpperCase()» = "«const.value»"
			«ENDFOREACH»
			end
		«ENDFILE»
	«ENDIF»
«ENDDEFINE»

